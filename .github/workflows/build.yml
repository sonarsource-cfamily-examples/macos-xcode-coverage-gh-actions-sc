name: Build
on:
  push:
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: macos-latest
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install Build Wrapper
        uses: SonarSource/sonarqube-scan-action/install-build-wrapper@v4
      - name: Use Xcode 15.0
        run: |
          # The xccov scripts below currently only work with Xcode 15.0
          sudo xcode-select -s "/Applications/Xcode_15.app"
      - name: Run Build Wrapper
        run: |
          build-wrapper-macosx-x86 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} xcodebuild -project macos-xcode.xcodeproj -scheme macos-xcode
      - name: Run tests to generate coverage statistics
        run: |
          xcodebuild test -project macos-xcode.xcodeproj -scheme test1 -enableCodeCoverage YES -derivedDataPath build
          xcodebuild test -project macos-xcode.xcodeproj -scheme test2 -enableCodeCoverage YES -derivedDataPath build
      - name: Collect coverage into one XML report
        run: |
          bash xccov-to-generic.sh build/Logs/Test/*.xcresult/ > generic-coverage.xml
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }} # Put the name of your token here
        with:
          args: >
            --define sonar.cfamily.compile-commands="${{ env.BUILD_WRAPPER_OUT_DIR }}/compile_commands.json"
            --define sonar.coverageReportPaths=generic-coverage.xml
